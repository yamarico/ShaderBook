== はじめに

= はじめに

「シェーダー」という言葉は馴染み深いかもしれませんが、その具体的な内容を説明するのは意外と難しいものです。筆者自身、シェーダーについて調べ始めると、GLSLの話から始まり、Unityでシェーダーを書いて少し理解した気になったものの、BlenderとUnityでシェーダーの互換性がないことを知りました。なぜそうなのかと深掘りしていくと、レンダリングパイプラインの概念に行き着き、バーテックスシェーダーやフラグメントシェーダーといった専門用語が次々と現れ、さらにはワイプやポストエフェクトもシェーダーで実現可能であることを知りました。調べれば調べるほど、新たな疑問が生まれていったのです。

現在の3DCGソフトウェア（Unity、Unreal Engine、Blenderなど）は、直感的なインターフェースやノードベースのシステムを備えており、背後でどのような処理が行われているかを理解せずとも利用できます。しかし、CGでより幅広い表現を行ったり、特定のツールに依存しないスキルを身につけたりするためには、シェーダーやCGの基礎を学ぶことが重要だと感じました。そこで、頭の整理も兼ねて本書を執筆することにしました。

私たち宮田研究室は、コンピュータグラフィックス（CG）を専門とする研究室です。本書では、シェーダーの基本概念から応用までを学び、シェーダーの世界を探求していきます。

具体的には、以下のテーマを取り上げます。

//list[本書で取り上げるテーマ][theme-list]{

CGとは何か、シェーダーは何をしているのか
Unlitシェーダーとはどのようなものか
Unityはどのようにして異なるプラットフォームに出力しているのか
なぜ一部のゲームはWindowsで動作し、Macでは動作しないのか
GLSLとOpenGLの関係性
GPUとCPUの役割、レンダリングパイプラインの仕組み
CGプラットフォーム（UnityやBlenderなど）によって映り方が変わる理由
ポストエフェクトとは何か
BRDF（双方向反射率分布関数）とは何か
フラクタルプロシージャルやカオス理論、SDF（Signed Distance Function） //}
CGの分野は非常に広く、技術の進歩も早いため、私たちが研究に取り組める時間は限られています。本書を通じて、短期間で効率的にCGの知識を深め、研究や開発に活用できることを目指しています。
== 免責事項

本書に記載された内容は、情報提供のみを目的としています。本書を使用して行われる開発、製作、運用は、読者ご自身の責任と判断に基づいて行ってください。本書の情報に基づく結果について、著者および出版社は一切の責任を負いません。
